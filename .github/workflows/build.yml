name: Build

on:
  workflow_run:
    workflows: [Format]
    types: [completed]
  workflow_dispatch:

permissions:
  contents: write # needed to commit the bumped version

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Bump version in gradle.properties
        id: bump
        shell: bash
        run: |
          FILE="gradle.properties"

          if ! grep -qE '^version=' "$FILE"; then
            echo "version key not found in $FILE"; exit 1
          fi

          OLD_VERSION="$(grep -E '^version=' "$FILE" | sed 's/^version=//')"
          CORE_VERSION="${OLD_VERSION%-SNAPSHOT}"

          IFS='.' read -r MAJ MIN PAT <<< "$CORE_VERSION"
          if [[ -z "$MAJ" || -z "$MIN" || -z "$PAT" || ! "$MAJ$MIN$PAT" =~ ^[0-9]+$ ]]; then
            echo "Version must be MAJOR.MINOR.PATCH (got: $OLD_VERSION)"; exit 1
          fi

          NEW_VERSION="$MAJ.$MIN.$((PAT + 1))"

          sed -i.bak -E "s/^version=.*/version=${NEW_VERSION}/" "$FILE"
          rm -f "$FILE.bak"

          echo "old=${OLD_VERSION}" >> "$GITHUB_OUTPUT"
          echo "new=${NEW_VERSION}" >> "$GITHUB_OUTPUT"

      - name: Commit bumped version
        if: ${{ github.ref == 'refs/heads/main' }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          if ! git diff --quiet; then
            git add gradle.properties
            git commit -m "ci: bump version ${{ steps.bump.outputs.old }} -> ${{ steps.bump.outputs.new }}"
            git push
          fi

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Harbor
        run: |
          echo "${{ secrets.HARBOR_ROBOT_PASSWORD }}" | \
            docker login cr.blac.dev -u "${{ secrets.HARBOR_ROBOT_USERNAME }}" --password-stdin

      - name: Extract version from gradle.properties
        id: extract_version
        run: |
          VERSION=$(grep "^version=" gradle.properties | cut -d'=' -f2)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Image version: $VERSION"

      - name: Build and tag Docker image
        run: |
          docker build -t cr.blac.dev/curas/server:$VERSION -t cr.blac.dev/curas/server:latest .

      - name: Push Docker image to Harbor
        run: |
          docker push cr.blac.dev/curas/server:${{ steps.bump.outputs.new }}
          docker push cr.blac.dev/curas/server:latest
