name: Build

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Extract version from gradle.properties
        id: extract_version
        run: |
          VERSION=$(grep "^version=" gradle.properties | cut -d'=' -f2)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Image version: $VERSION"

      - name: Build and tag Docker image
        run: |
          docker build -t ${{ secrets.AWS_ECR_REPOSITORY }}:$VERSION -t ${{ secrets.AWS_ECR_REPOSITORY }}:latest .
          docker tag ${{ secrets.AWS_ECR_REPOSITORY }}:$VERSION ${{ steps.login-ecr.outputs.registry }}/${{ secrets.AWS_ECR_REPOSITORY }}:$VERSION
          docker tag ${{ secrets.AWS_ECR_REPOSITORY }}:latest ${{ steps.login-ecr.outputs.registry }}/${{ secrets.AWS_ECR_REPOSITORY }}:latest

      - name: Push Docker image to ECR
        run: |
          docker push ${{ steps.login-ecr.outputs.registry }}/${{ secrets.AWS_ECR_REPOSITORY }}:$VERSION
          docker push ${{ steps.login-ecr.outputs.registry }}/${{ secrets.AWS_ECR_REPOSITORY }}:latest
